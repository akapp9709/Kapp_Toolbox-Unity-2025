//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Kapp_Toolbox-Unity-2025/Input/MainInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainInputActions"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""31ebf07f-62c2-4386-a0ed-80cc87fdfbe3"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5973b62f-d038-44b7-bdc4-ec60a6aec9fd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action 1"",
                    ""type"": ""Button"",
                    ""id"": ""5c2dc99a-a36e-44fc-b1f5-239b33eda676"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Action 2"",
                    ""type"": ""Button"",
                    ""id"": ""041043da-e73a-4408-b7ee-df354a0453dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 1"",
                    ""type"": ""Button"",
                    ""id"": ""20a16255-6510-49af-af16-5687b92a99fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 2"",
                    ""type"": ""Button"",
                    ""id"": ""14e5e0e7-9576-4902-8af8-7ff139145af5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 3"",
                    ""type"": ""Button"",
                    ""id"": ""2cc644a0-ef38-4722-91d8-485abd580e18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 4"",
                    ""type"": ""Button"",
                    ""id"": ""000b832e-7aba-40c4-86a4-1413a7b78858"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space Bar"",
                    ""type"": ""Button"",
                    ""id"": ""03c548c8-266e-4210-8be7-75eb54910ea4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""377f3da1-8dba-4b56-a187-63f17f3d4365"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""743d68aa-dba2-463e-90c2-fe79a4f3d436"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""79ef8da7-2309-465e-9e7a-f61d42a281c7"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1f6b64a9-86c9-480e-8391-82f96973f7b7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ace8dcf0-e770-4286-9036-703bfcc494ab"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3f12c485-6b3e-4e12-a234-f1dbdc0f7782"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5d312b0e-c915-407e-b623-e9ec8618313a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fcffc346-80dd-4402-a989-75886be4f851"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a05fa7e4-0110-4f4f-916a-408cbe331d8c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3760cc2-422d-485e-9a85-f61437217096"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e35cde8-b76b-4582-8bf8-fe5d6b077ccc"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80d9d883-aeb1-4d12-ab73-73d9e6cab4f2"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfbf93a3-ad05-4c87-a735-7b26875bf4ab"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b19f0f0d-f53f-44ae-9a88-4191ae04c5c2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Space Bar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c043ccb-2ac6-417e-a422-5d01c1e827eb"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bde97802-bd64-429e-b27e-05723a180ee9"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_Move = m_Main.FindAction("Move", throwIfNotFound: true);
        m_Main_Action1 = m_Main.FindAction("Action 1", throwIfNotFound: true);
        m_Main_Action2 = m_Main.FindAction("Action 2", throwIfNotFound: true);
        m_Main_AbilitySlot1 = m_Main.FindAction("Ability Slot 1", throwIfNotFound: true);
        m_Main_AbilitySlot2 = m_Main.FindAction("Ability Slot 2", throwIfNotFound: true);
        m_Main_AbilitySlot3 = m_Main.FindAction("Ability Slot 3", throwIfNotFound: true);
        m_Main_AbilitySlot4 = m_Main.FindAction("Ability Slot 4", throwIfNotFound: true);
        m_Main_SpaceBar = m_Main.FindAction("Space Bar", throwIfNotFound: true);
        m_Main_Sprint = m_Main.FindAction("Sprint", throwIfNotFound: true);
        m_Main_Aim = m_Main.FindAction("Aim", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
    private readonly InputAction m_Main_Move;
    private readonly InputAction m_Main_Action1;
    private readonly InputAction m_Main_Action2;
    private readonly InputAction m_Main_AbilitySlot1;
    private readonly InputAction m_Main_AbilitySlot2;
    private readonly InputAction m_Main_AbilitySlot3;
    private readonly InputAction m_Main_AbilitySlot4;
    private readonly InputAction m_Main_SpaceBar;
    private readonly InputAction m_Main_Sprint;
    private readonly InputAction m_Main_Aim;
    public struct MainActions
    {
        private @MainInputActions m_Wrapper;
        public MainActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Main_Move;
        public InputAction @Action1 => m_Wrapper.m_Main_Action1;
        public InputAction @Action2 => m_Wrapper.m_Main_Action2;
        public InputAction @AbilitySlot1 => m_Wrapper.m_Main_AbilitySlot1;
        public InputAction @AbilitySlot2 => m_Wrapper.m_Main_AbilitySlot2;
        public InputAction @AbilitySlot3 => m_Wrapper.m_Main_AbilitySlot3;
        public InputAction @AbilitySlot4 => m_Wrapper.m_Main_AbilitySlot4;
        public InputAction @SpaceBar => m_Wrapper.m_Main_SpaceBar;
        public InputAction @Sprint => m_Wrapper.m_Main_Sprint;
        public InputAction @Aim => m_Wrapper.m_Main_Aim;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void AddCallbacks(IMainActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Action1.started += instance.OnAction1;
            @Action1.performed += instance.OnAction1;
            @Action1.canceled += instance.OnAction1;
            @Action2.started += instance.OnAction2;
            @Action2.performed += instance.OnAction2;
            @Action2.canceled += instance.OnAction2;
            @AbilitySlot1.started += instance.OnAbilitySlot1;
            @AbilitySlot1.performed += instance.OnAbilitySlot1;
            @AbilitySlot1.canceled += instance.OnAbilitySlot1;
            @AbilitySlot2.started += instance.OnAbilitySlot2;
            @AbilitySlot2.performed += instance.OnAbilitySlot2;
            @AbilitySlot2.canceled += instance.OnAbilitySlot2;
            @AbilitySlot3.started += instance.OnAbilitySlot3;
            @AbilitySlot3.performed += instance.OnAbilitySlot3;
            @AbilitySlot3.canceled += instance.OnAbilitySlot3;
            @AbilitySlot4.started += instance.OnAbilitySlot4;
            @AbilitySlot4.performed += instance.OnAbilitySlot4;
            @AbilitySlot4.canceled += instance.OnAbilitySlot4;
            @SpaceBar.started += instance.OnSpaceBar;
            @SpaceBar.performed += instance.OnSpaceBar;
            @SpaceBar.canceled += instance.OnSpaceBar;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
        }

        private void UnregisterCallbacks(IMainActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Action1.started -= instance.OnAction1;
            @Action1.performed -= instance.OnAction1;
            @Action1.canceled -= instance.OnAction1;
            @Action2.started -= instance.OnAction2;
            @Action2.performed -= instance.OnAction2;
            @Action2.canceled -= instance.OnAction2;
            @AbilitySlot1.started -= instance.OnAbilitySlot1;
            @AbilitySlot1.performed -= instance.OnAbilitySlot1;
            @AbilitySlot1.canceled -= instance.OnAbilitySlot1;
            @AbilitySlot2.started -= instance.OnAbilitySlot2;
            @AbilitySlot2.performed -= instance.OnAbilitySlot2;
            @AbilitySlot2.canceled -= instance.OnAbilitySlot2;
            @AbilitySlot3.started -= instance.OnAbilitySlot3;
            @AbilitySlot3.performed -= instance.OnAbilitySlot3;
            @AbilitySlot3.canceled -= instance.OnAbilitySlot3;
            @AbilitySlot4.started -= instance.OnAbilitySlot4;
            @AbilitySlot4.performed -= instance.OnAbilitySlot4;
            @AbilitySlot4.canceled -= instance.OnAbilitySlot4;
            @SpaceBar.started -= instance.OnSpaceBar;
            @SpaceBar.performed -= instance.OnSpaceBar;
            @SpaceBar.canceled -= instance.OnSpaceBar;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
        }

        public void RemoveCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActions @Main => new MainActions(this);
    public interface IMainActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAction1(InputAction.CallbackContext context);
        void OnAction2(InputAction.CallbackContext context);
        void OnAbilitySlot1(InputAction.CallbackContext context);
        void OnAbilitySlot2(InputAction.CallbackContext context);
        void OnAbilitySlot3(InputAction.CallbackContext context);
        void OnAbilitySlot4(InputAction.CallbackContext context);
        void OnSpaceBar(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
    }
}
